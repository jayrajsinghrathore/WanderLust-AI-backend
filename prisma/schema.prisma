// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  trips         Trip[]
  savedPlaces   SavedPlace[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Trip {
  id          String      @id @default(cuid())
  title       String
  description String?
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  destinations Destination[]
  itinerary   ItineraryDay[]
}

model Destination {
  id          String      @id @default(cuid())
  name        String
  description String?
  image       String?
  latitude    Float?
  longitude   Float?
  tripId      String
  trip        Trip        @relation(fields: [tripId], references: [id], onDelete: Cascade)
}

model ItineraryDay {
  id          String      @id @default(cuid())
  day         Int
  title       String
  description String?
  date        DateTime?
  tripId      String
  trip        Trip        @relation(fields: [tripId], references: [id], onDelete: Cascade)
  activities  Activity[]
}

model Activity {
  id            String      @id @default(cuid())
  title         String
  description   String?
  time          String?
  duration      String?
  type          String?
  imageUrl      String?
  itineraryDayId String
  itineraryDay  ItineraryDay @relation(fields: [itineraryDayId], references: [id], onDelete: Cascade)
}

model SavedPlace {
  id          String      @id @default(cuid())
  name        String
  description String?
  image       String?
  type        String?
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime    @default(now())
}
